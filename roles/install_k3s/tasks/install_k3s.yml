---
# tasks file for install_k3s
- name: put selinux in permissive
  ansible.posix.selinux:
    policy: targeted
    state: permissive

- name: check that /usr/local/bin/k3s exists
  stat:
    path: /usr/local/bin/k3s
  register: stat_result

- name: install k3s
  block:
  - name: download install script
    ansible.builtin.get_url:
      url: https://get.k3s.io
      dest: /root/install_k3s.sh
      mode: '0744'
      validate_certs: false

  - name: install k3s
    ansible.builtin.command:
      cmd: /root/install_k3s.sh
    register: output
    failed_when: output.rc | int != 0

  - name: dump result 
    ansible.builtin.debug:
      msg: "{{ output.stdout }}"
  when: 
  - not disable_service_lb
  - not stat_result.stat.exists

- name: install k3s without service lb
  block:
  - name: download install script
    ansible.builtin.get_url:
      url: https://get.k3s.io
      dest: /root/install_k3s.sh
      mode: '0744'
      validate_certs: false

  - name: install k3s without service lb
    ansible.builtin.command:
      cmd: /root/install_k3s.sh
    environment:
      INSTALL_K3S_EXEC: "--disable servicelb" 
    register: output
    failed_when: output.rc | int != 0
    when: disable_service_lb

  - name: dump result 
    ansible.builtin.debug:
      msg: "{{ output.stdout }}"
  when: 
  - disable_service_lb
  - not stat_result.stat.exists

- name: ensure k3s is up and running
  ansible.builtin.systemd:
    state: started
    name: k3s.service

- name: install bash-completion for kubectl auto completion
  ansible.builtin.dnf:
    name: bash-completion
    state: present

- name: check if auto completion file for kubectl exists
  ansible.builtin.stat:
    path: "{{ kubectl_completion_file }}"
  register: kubectl_stat

- name: enable auto completion for kubectl
  ansible.builtin.shell:
    cmd: kubectl completion bash | sudo tee {{ kubectl_completion_file }} > /dev/null
  when: not kubectl_stat.stat.exists
