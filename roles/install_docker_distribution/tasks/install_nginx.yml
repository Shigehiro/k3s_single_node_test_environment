---
- name: copy template for ConfigMap of nginx
  ansible.builtin.template:
    src: configmap_nginx_conf.yml.j2
    dest: "{{ nginx_configmap_yaml_path }}"
    owner: root
    group: root
    mode: '0644'

- name: check if ConfigMap {{ nginx_configmap_name }} exists
  ansible.builtin.shell:
    cmd: "kubectl get cm | grep -c {{ nginx_configmap_name }}"
  ignore_errors: true
  failed_when: false
  changed_when: false
  register: cm_nginx

- name: create ConfigMap {{ nginx_configmap_name }}
  ansible.builtin.command:
    cmd: "kubectl apply -f {{ nginx_configmap_yaml_path }}"
  environment: 
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml
  when: "cm_nginx.stdout|int==0"

#- name: copy template for Deployment nginx(nodeport)
#  ansible.builtin.template:
#    src: nginx_deployment_nodport.yaml.j2
#    dest: "{{ nginx_deployment_yaml_path }}"
#    owner: root
#    group: root
#    mode: '0644'
#  when:
#  - use_nginx_nodeport

- name: copy template for Deployment nginx(cluster ip)
  ansible.builtin.template:
    src: nginx_deployment_clusterip.yaml.j2
    dest: "{{ nginx_deployment_yaml_path }}"
    owner: root
    group: root
    mode: '0644'
  when:
  - use_nginx_clusterip

#- name: check if Deployment nginx exists
#  ansible.builtin.shell:
#    cmd: "kubectl get deployment | grep -c nginx"
#  ignore_errors: true
#  failed_when: false
#  changed_when: false
#  register: deployment_nginx
#
#- name: create deployment nginx
#  ansible.builtin.command:
#    cmd: "kubectl apply -f {{ nginx_deployment_yaml_path }}"
#  environment: 
#    KUBECONFIG: /etc/rancher/k3s/k3s.yaml
#  when: "deployment_nginx.stdout|int==0"